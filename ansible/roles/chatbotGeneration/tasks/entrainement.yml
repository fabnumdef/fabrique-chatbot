---
- name: Savoir si le répertoire models est vide.
  ansible.builtin.find:
    paths: "{{ appsDir }}/{{ botDir }}/models"
    file_type: file
  register: models_files

- name: Lancement d'un entraînement RASA sans modèle existant.
  become: true
  ansible.builtin.command:
    chdir: '{{ appsDir }}/{{ botDir }}/'
    cmd: '{{ app_venv_folder }}/bin/rasa train --domain domain.yml --data data/nlu.yml data/rules.yml  --augmentation 0'
  environment:
    SQLALCHEMY_WARN_20: "1"
    SQLALCHEMY_SILENCE_UBER_WARNING: "1"
  when: models_files.matched == 0
  become_user: "{{ chatbot_user }}"

#- name: Lancement d'un entraînement RASA avec modèle existant.
#  ansible.builtin.command:
#    chdir: '{{ appsDir }}/{{ botDir }}/'
#    cmd: '{{ app_venv_folder }}/bin/rasa train --finetune --epoch-fraction 0.2 --num-threads {{ ansible_processor_vcpus }}'
#  when: models_files.matched != 0
#  become: true
#  become_user: "{{ script_user }}"

- name: Désactivation de la telemetrie.
  ansible.builtin.command:
    chdir: '{{ appsDir }}/{{ botDir }}/'
    cmd: '{{ app_venv_folder }}/bin/rasa telemetry disable'
  become: true
  become_user: "{{ chatbot_user }}"

- name: Stop de rasa core
  become: true
  ansible.builtin.systemd:
    name: rasa-core
    state: stopped

- name: Démarrage les modèles rasa ( rasa-core )
  become: true
  ansible.builtin.systemd:
    name: rasa-core
    state: started

- name: Stop de rasa actions
  become: true
  ansible.builtin.systemd:
    name: rasa-actions
    state: stopped

- name: Démarrage de rasa actions
  become: true
  ansible.builtin.systemd:
    name: rasa-actions
    state: started
