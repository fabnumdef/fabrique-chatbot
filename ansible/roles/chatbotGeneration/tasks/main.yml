---
- name: Copie chatbot-back
  become: true
  ansible.builtin.synchronize:
    src: '{{ appsDir }}/{{ gitDir }}/{{ backDir }}'
    dest: '{{ appsDir }}'
  delegate_to: '{{ inventory_hostname }}'

- name: Déployer le fichier .env un template Jinja
  become: true
  ansible.builtin.template:
    src: env-template.j2
    dest: '{{ appsDir }}/{{ backDir }}/.env'
    owner: automate
    group: automate
    mode: '0664'

- name: Copie chatbot-front
  become: true
  ansible.builtin.synchronize:
    src: '{{ appsDir }}/{{ gitDir }}/{{ frontDir }}/dist/{{ frontDir }}'
    dest: '{{ appsDir }}'
  delegate_to: '{{ inventory_hostname }}'

- name: Copie webchat
  become: true
  ansible.builtin.synchronize:
    src: '{{ appsDir }}/{{ gitDir }}/{{ frontDir }}/dist/{{ webchatDir }}'
    dest: '{{ appsDir }}'
  delegate_to: '{{ inventory_hostname }}'

- name: Copie chatbot-template
  become: true
  ansible.builtin.synchronize:
    src: '{{ appsDir }}/{{ gitDir }}/{{ botDir }}'
    dest: '{{ appsDir }}'
  delegate_to: '{{ inventory_hostname }}'

- name: Déployer le fichier .env un template Jinja
  become: true
  ansible.builtin.template:
    src: env-template.j2
    dest: '{{ appsDir }}/{{ botDir }}/.env'
    owner: automate
    group: automate
    mode: '0664'

- name: Vérification si le certif BDD existe
  delegate_to: 'localhost'
  ansible.builtin.stat:
    path: '/usr/local/share/ca-certificates/postgres.crt'
  register: db_cert

- name: Ajout du certificat BDD
  become: true
  ansible.builtin.copy:
    src: '/usr/local/share/ca-certificates/postgres.crt'
    dest: '/usr/local/share/ca-certificates/postgres.crt'
  when: db_cert.stat.exists

- name: Ajout du nom DNS à la configuration nginx 
  become: true
  ansible.builtin.lineinfile:
    path: '/etc/nginx/conf.d/default.conf'
    insertbefore : '^    location / {'
    line: '    server_name  {{ botDomain }};'
  when: botDomain is defined and botDomain is not none and botDomain != ""

- name: Install du certificat TLS via Certbot
  become: true
  ansible.builtin.command:
    cmd: 'certbot --nginx -d {{ botDomain }} -n --redirect --agree-tos -m {{ certbot_mail }}'
  when: botDomain is defined and botDomain is not none and botDomain != ""

- name: Update de la conf nginx pour utiliser http2
  become: true
  ansible.builtin.lineinfile:
    path: '/etc/nginx/conf.d/default.conf'
    regexp: '^    listen 443 ssl;'
    line: '    listen 443 ssl http2;'
  when: botDomain is defined and botDomain is not none and botDomain != ""

- name: Update certbot en TLS 1.2
  become: true
  ansible.builtin.lineinfile:
    path: '/etc/letsencrypt/options-ssl-nginx.conf'
    regexp: '^ssl_protocols TLSv1 TLSv1.1 TLSv1.2;'
    line: 'ssl_protocols TLSv1.2 TLSv1.3;'
  when: botDomain is defined and botDomain is not none and botDomain != ""

- name:  Install npm chatbot-back
  become: true
  become_user: "{{ chatbot_user }}"
  ansible.builtin.command:
    cmd: npm install
    chdir: '{{ appsDir }}/{{ backDir }}'

- name: Build npm chatbot-back
  become: true
  become_user: "{{ chatbot_user }}"
  ansible.builtin.command:
    cmd: 'npm run build'
    chdir: '{{ appsDir }}/{{ backDir }}'

- name: Npm copy env file
  become: true
  become_user: "{{ chatbot_user }}"
  ansible.builtin.command:
    cmd: 'npm run copy'
    chdir: '{{ appsDir }}/{{ backDir }}'

- name: Création du répertoire mediatheque
  become: true
  ansible.builtin.file:
    path: '{{ appsDir }}/{{ backDir }}/mediatheque'
    state: directory
    owner: '{{ chatbot_user }}'
    group: '{{ nginx_group }}'
    mode: '751'

- name: Création du répertoire historic
  become: true
  ansible.builtin.file:
    path: '{{ appsDir }}/{{ backDir }}/historic'
    state: directory
    owner: '{{ chatbot_user }}'
    group: '{{ nginx_group }}'
    mode: '751'

- name: Copie des fichiers pour la configuration et la génération du modèle template
  ansible.builtin.include_tasks: copie_fichiers.yml

- name: Création des services pour le redémarrage
  ansible.builtin.include_tasks: creation_service.yml

- name: Entrainement modèle
  ansible.builtin.include_tasks: entrainement.yml
