- name: Copy env-file
  copy:
    src: '../files/.env'
    dest: '{{ appsDir }}/{{ gitDir }}/.env'

- name: Copy chatbot-back
  copy:
    remote_src: yes
    src: '{{ appsDir }}/{ gitDir }}/{{ backDir }}/'
    dest: '{{ appsDir }}/{{ backDir }}'

- name: Copy env-file bis
  copy:
    remote_src: yes
    src: '{{ appsDir }}/{{ gitDir }}/.env'
    dest: '{{ appsDir }}/{{ backDir }}/.env'

- name: Copy chatbot-front
  copy:
    remote_src: yes
    src: '{{ appsDir }}/{{ gitDir }}/{{ frontDir }}/dist/{{ frontDir }}/'
    dest: '{{ appsDir }}/{{ frontDir }}'

- name: Copy webchat
  copy:
    remote_src: yes
    src: '{{ appsDir }}/{{ gitDir }}/{{ frontDir }}/dist/{{ webchatDir }}/'
    dest: '{{ appsDir }}/{{ webchatDir }}'

- name: Copy chatbot-template
  copy:
    remote_src: yes
    src: '{{ appsDir }}/{{ gitDir }}/{{ botDir }}/'
    dest: '{{ appsDir }}/{{ botDir }}'

- name: add server name to the nginx site config file
  lineinfile:
    path: '/etc/nginx/conf.d/default.conf'
    insertbefore : '^    location / {'
    line: '    server_name  {{ botDomain }};'
  when: botDomain is defined and botDomain != ""
  become: yes

- name: Open port 80 before check SSL certificate
  become: yes
  ufw:
    rule: allow
    port: '80'
    proto: tcp
  when: botDomain is defined and botDomain != ""

- name: Install SSL certificate
  become: yes
  command:
    cmd: 'certbot --nginx -d {{ botDomain }} -n --redirect --agree-tos -m vincent.laine@beta.gouv.fr'
  when: botDomain is defined and botDomain != ""

- name: Close port 80 after SSL certificate
  become: yes
  ufw:
    rule: deny
    port: '80'
    proto: tcp
  when: botDomain is defined and botDomain != ""

- name: Auto renew SSL certificate
  become: yes
  command:
    cmd: 'certbot renew --pre-hook "ufw allow 80/tcp" --post-hook "ufw deny 80/tcp"'
  when: botDomain is defined and botDomain != ""

- name: Update nginx site conf to use http2
  become: true
  lineinfile:
    path: '/etc/nginx/conf.d/default.conf'
    regexp: '^    listen \[::]:443 ssl ipv6only=on;'
    line: '    listen [::]:443 ssl http2 ipv6only=on;'
  when: botDomain is defined and botDomain != ""

- name: Update nginx site conf to use http2
  become: true
  lineinfile:
    path: '/etc/nginx/conf.d/default.conf'
    regexp: '^    listen 443 ssl;'
    line: '    listen 443 ssl http2;'
  when: botDomain is defined and botDomain != ""

- name: Update certbot conf to use TLS 1.2
  become: true
  lineinfile:
    path: '/etc/letsencrypt/options-ssl-nginx.conf'
    regexp: '^ssl_protocols TLSv1 TLSv1.1 TLSv1.2;'
    line: 'ssl_protocols TLSv1.2 TLSv1.3;'
  when: botDomain is defined and botDomain != ""

- name: npm install chatbot-back
  when: intranet is not defined or intranet == "false"
  command:
    cmd: npm install
    chdir: '{{ appsDir }}/{{ backDir }}'

- name: npm build chatbot-back
  command:
    cmd: 'npm run build'
    chdir: '{{ appsDir }}/{{ backDir }}'

- name: npm copy env file
  command:
    cmd: 'npm run copy'
    chdir: '{{ appsDir }}/{{ backDir }}'

- name: NODE | Stop APP
  shell: pm2 stop ChatbotBack
  args:
    chdir: '{{ appsDir }}/{{ backDir }}'
  ignore_errors: yes

- name: NODE | Start APP
  shell: pm2 start main.js --name ChatbotBack
  args:
    chdir: '{{ appsDir }}/{{ backDir }}/dist'

#- name: Mise à jour du script de PM2 pour se relancer au reboot du serveur
#  become: true
#  shell: 'env PATH=$PATH:/usr/bin /usr/local/lib/node_modules/pm2/bin/pm2 startup systemd -u chatbot_user --hp /home/chatbot_user'

- name: Vérification du statut de PM2
  ignore_errors: true
  systemd:
    name: pm2-chatbot_user
    state: started

- name: Copy endpoints.yml rasa file
  copy:
    src: '{{ appsDir }}/{{ botDir }}/endpoints.example.yml'
    dest: '{{ appsDir }}/{{ botDir }}/endpoints.yml'
    remote_src: yes

- name: Update endpoints.yml rasa file
  lineinfile:
    path: '{{ appsDir }}/{{ botDir }}/endpoints.yml'
    regexp: '^  password:'
    line: '  password: "{{ DB_PASSWORD }}"'

#- name: Train rasa
#  command:
#    chdir: '{{ appsDir }}/{{ botDir }}/'
#    cmd: 'rasa train --num-threads 8'

#- name: Stop rasa chatbot
#  command: 'pkill screen'
#  ignore_errors: true

#- name: Start rasa chatbot
#  command:
#    chdir: '{{ appsDir }}/{{ botDir }}/'
#    cmd: 'screen -S rasa -dmS rasa run -m models --log-file out.log --cors "*" --debug'

- name: copy rc.local file to restart bot on boot
  become: true
  copy:
    src: '../files/rc.local'
    dest: '/etc/rc.local'

- name: Set right rights on rc.local file
  become: true
  file:
    path: '/etc/rc.local'
    mode: '755'

#- name: copy files for bot
#  ignore_errors: true
#  copy:
#    src: '{{ item.src }}'
#    dest: '{{ item.dest }}'
#  with_items:
#    - { src: 'roles/chatbotGeneration/files/rc.local', dest: '{{ gitDir }}/rc.local' }
#    - { src: 'roles/chatbotGeneration/files/nginx_rhel.conf', dest: '{{ gitDir }}/nginx.conf' }
#    - { src: 'roles/chatbotGeneration/files/nginx_conf.cfg', dest: '{{ gitDir }}/nginx_conf.cfg' }
#    - { src: 'roles/chatbotGeneration/files/.env', dest: '{{ gitDir }}/.env' }
#  become: yes
