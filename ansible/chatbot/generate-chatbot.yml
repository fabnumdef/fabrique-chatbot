---
- name: Init chatbot server

  hosts: all

  remote_user: chatbot_user

  vars_files:
    - ./credentials.yml

  vars:
    - ssh_key: "~/.ssh/id_rsa.pub"
    - ansible_user: "chatbot_user"
    - ansible_password: "{{ USER_PASSWORD }}"
    - ansible_become_pass: "{{ USER_PASSWORD }}"
    - appsDir: '/var/www'
    - gitDir: '/var/www/git'
    - nestDir: 'fabrique-chatbot-back'
    - backDir: 'chatbot-back'
    - botDir: 'chatbot-template'
    - frontDir: 'chatbot-front'
    - webchatDir: 'webchat'

  tasks:
    - name: Set right rights on www directory
      become: true
      file:
        path: '{{appsDir}}'
        group: www-data
        mode: '774'
        recurse: yes

    # For synchronize / rsync to work
    - name: ensure user is accessable with ssh key
      become: true
      authorized_key:
        user: chatbot_user
        key: "{{ lookup('file', '{{ ssh_key }}') }}"

    - name: Copy chatbot-back
      synchronize:
        src: '{{ appsDir }}/{{ nestDir }}/chatbot/{{ backDir }}/'
        dest: '{{ appsDir }}/{{ backDir }}'
        rsync_opts:
          - '--exclude=mediatheque/'
          - '--exclude=historic/'

    - name: Copy password-file
      copy:
        src: '{{ appsDir }}/{{ nestDir }}/ansible/fabrique/password_file'
        dest: '{{ appsDir }}/{{ backDir }}/password_file'

    - name: Copy env-file
      copy:
        src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/.env'
        dest: '{{ appsDir }}/{{ backDir }}/.env'

    - name: Copy chatbot-front
      synchronize:
        src: '{{ appsDir }}/{{ nestDir }}/chatbot/{{ frontDir }}/dist/{{ frontDir }}/'
        dest: '{{ appsDir }}/{{ frontDir }}'
        delete: yes

    - name: Copy webchat
      synchronize:
        src: '{{ appsDir }}/{{ nestDir }}/chatbot/{{ frontDir }}/dist/{{ webchatDir }}/'
        dest: '{{ appsDir }}/{{ webchatDir }}'
        delete: yes

    - name: copy the nginx config file
      copy:
        src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/nginx.conf'
        dest: '/etc/nginx/nginx.conf'
      become: yes

    - name: copy the nginx site config file
      copy:
        src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/nginx_conf.cfg'
        dest: '/etc/nginx/conf.d/default.conf'
      become: yes

    - name: add server name to the nginx site config file
      lineinfile:
        path: '/etc/nginx/conf.d/default.conf'
        insertbefore : '^    location / {'
        line: '    server_name  {{ botDomain }};'
      when: botDomain is defined and botDomain != ""

    - name: restart nginx
      service:
        name: nginx
        state: restarted
      become: yes

    - name: Install SSL certificate
      become: yes
      command:
        cmd: 'certbot --nginx -d {{ botDomain }} -n --redirect --agree-tos -m vincent.laine@beta.gouv.fr'
      when: botDomain is defined and botDomain != ""

    - name: Close port 80 after SSL certificate
      become: yes
      ufw:
        rule: deny
        port: '80'
        proto: tcp
      when: botDomain is defined and botDomain != ""

    - name: Update nginx site conf to use http2
      become: true
      lineinfile:
        path: '/etc/nginx/conf.d/default.conf'
        regexp: '^    listen \[::]:443 ssl ipv6only=on;'
        line: '    listen [::]:443 ssl http2 ipv6only=on;'
      when: botDomain is defined and botDomain != ""

    - name: Update nginx site conf to use http2
      become: true
      lineinfile:
        path: '/etc/nginx/conf.d/default.conf'
        regexp: '^    listen 443 ssl;'
        line: '    listen 443 ssl http2;'
      when: botDomain is defined and botDomain != ""

    - name: Update certbot conf to use TLS 1.2
      become: true
      lineinfile:
        path: '/etc/letsencrypt/options-ssl-nginx.conf'
        regexp: '^ssl_protocols TLSv1 TLSv1.1 TLSv1.2;'
        line: 'ssl_protocols TLSv1.2 TLSv1.3;'
      when: botDomain is defined and botDomain != ""

    - name: Install RASA version
      become: true
      pip:
        executable: pip3
        name:
          - rasa==2.6.3
          - psycopg2-binary

    - name: Copy chatbot-template
      synchronize:
        src: '{{ appsDir }}/{{ nestDir }}/chatbot/{{ botDir }}/'
        dest: '{{ appsDir }}/{{ botDir }}'
        rsync_opts:
          - '--exclude=models/'

    - name: delete user access with ssh key
      become: true
      authorized_key:
        user: chatbot_user
        state: absent
        key: "{{ lookup('file', '{{ ssh_key }}') }}"


    - name: npm install chatbot-back
#      become: yes
      command:
        cmd: npm install
        chdir: '{{ appsDir }}/{{ backDir }}'

    - name: npm build chatbot-back
#      become: yes
      command:
        cmd: 'npm run build'
        chdir: '{{ appsDir }}/{{ backDir }}'

    - name: npm copy env file
      become: yes
      command:
        cmd: 'npm run copy'
        chdir: '{{ appsDir }}/{{ backDir }}'

    - name: NODE | Stop APP
      shell: pm2 stop ChatbotBack
      args:
        chdir: '{{ appsDir }}/{{ backDir }}'
      ignore_errors: yes
      become: yes

    - name: NODE | Start APP
      shell: pm2 start main.js --name ChatbotBack
      args:
        chdir: '{{ appsDir }}/{{ backDir }}/dist'
      become: yes

    - name: Update PM2 script at startup
      become: yes
      shell: pm2 startup

    - name: reload pm2 startup script
      become: yes
      systemd:
        name: pm2-root.service
        state: reloaded

    - name: Copy endpoints.yml rasa file
      become: true
      copy:
        src: '{{ appsDir }}/{{ botDir }}/endpoints.example.yml'
        dest: '{{ appsDir }}/{{ botDir }}/endpoints.yml'
        remote_src: yes

    - name: Update endpoints.yml rasa file
      become: true
      lineinfile:
        path: '{{ appsDir }}/{{ botDir }}/endpoints.yml'
        regexp: '^  password:'
        line: '  password: "{{ DB_PASSWORD }}"'

    - name: Train rasa
      become: true
      command:
        chdir: '{{ appsDir }}/{{ botDir }}/'
        cmd: 'rasa train --num-threads 8'

    - name: Stop rasa chatbot
      become: true
      command: 'pkill screen'
      ignore_errors: true

    - name: Start rasa chatbot
      become: true
      command:
        chdir: '{{ appsDir }}/{{ botDir }}/'
        cmd: 'screen -S rasa -dmS rasa run -m models --log-file out.log --cors "*" --debug'

    - name: copy rc.local file to restart bot on boot
      copy:
        src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/rc.local'
        dest: '/etc/rc.local'
      become: yes

    - name: Set right rights on rc.local file
      become: yes
      file:
        path: '/etc/rc.local'
        mode: '755'

    - name: create git dir
      become: yes
      file:
        path: '{{ gitDir }}'
        state: directory
        mode: '755'

    - name: copy files for bot
      copy:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
      with_items:
        - { src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/rc.local', dest: '{{ gitDir }}/rc.local' }
        - { src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/nginx.conf', dest: '{{ gitDir }}/nginx.conf' }
        - { src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/nginx_conf.cfg', dest: '{{ gitDir }}/nginx_conf.cfg' }
        - { src: '{{ appsDir }}/{{ nestDir }}/ansible/chatbot/.env', dest: '{{ gitDir }}/.env' }
      become: yes

